services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # ports:
    # - "${BACKEND_PORT}:8080" 
    restart: unless-stopped  
    environment:
      - DATABASE_DSN=gorm:gorm@tcp(db:3306)/gorm?charset=utf8&parseTime=True&loc=Local
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -qO- http://localhost:8080/ping | grep -q pong || exit 1"]
    #   interval: 60s
    #   timeout: 3s
    #   retries: 20
    #   start_period: 60s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal-net

  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # depends_on:
    #   backend:
    #     condition: service_healthy
    networks:
      - internal-net
      - tinker-net

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: gorm
      MYSQL_USER: gorm
      MYSQL_PASSWORD: gorm
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      # Use TCP check on 127.0.0.1:3306 to avoid passing during MySQL's temporary init socket phase
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -P 3306 -u root -p$$MYSQL_ROOT_PASSWORD --silent"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s
    volumes:
      - db-data:/var/lib/mysql
    # ports:
      # - "${DB_PORT}:3306"
    networks:
      - internal-net


volumes:
  db-data:

networks:
  tinker-net:
    external: true
  internal-net:
    driver: bridge
    internal: true
